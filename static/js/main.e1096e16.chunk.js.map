{"version":3,"sources":["logo.svg","redux/dataReducer.js","redux/types.js","redux/rootReducer.js","components/Header.js","redux/actions.js","components/MainCommands.js","components/LostPage.js","components/Question.js","components/AnswerItem.js","components/Preloader.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","gameProcStatus","currentLanguage","currentDifficultyLevel","currentRoundIndex","answerProcStatus","currentAnswer","currentAnswerStatus","answersDisabledStatus","en","ru","am","question","correct_answer","incorrect_answers","currentSoundProps","dataReducer","state","action","type","rounds","index","status","answer","url","autoLoad","autoPlay","playStatus","answerSoundUrl","rightAnswerSoundUrl","wrongAnswerSoundUrl","rootReducer","combineReducers","data","Header","id","src","logo","alt","setCurrentAnswer","setAnswerProcessStatus","setGameProcStatus","setAnswersDisabledStatus","setTimeoutPromise","ms","Promise","resolve","setTimeout","setCurrentSoundProps","setCurrentSoundPropsAfterCompare","MainCommands","dispatch","useDispatch","to","className","onClick","console","log","LostPage","Question","props","AnswerItem","backgroundColor","correctAnswer","event","checkingSoundUrl","a","style","disabled","Preloader","role","connect","useEffect","difficulty","fetch","then","res","json","results","forEach","item","variants","push","setRounds","length","answers","map","key","onFinishedPlaying","App","path","exact","component","Game","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e1096e16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f1a49803.svg\";","import { SET_ROUNDS, SET_CURRENT_ROUND_INDEX, SET_CURRENT_ANSWER, SET_ANSWER_PROC_STATUS, HIGHLIGHT_TRUE_ANSWER, SET_NEXT_ROUND, SET_GAME_PROC_STATUS, SET_CURRENT_SOUND_PROPS, SET_CURRENT_SOUND_PROPS_AFTER_COMPARE, SET_ANSWERS_DISABLED_STATUS } from './types';\r\n\r\nconst initialState = {\r\n\tgameProcStatus: 'start',\r\n\tcurrentLanguage: 'en',\r\n\tcurrentDifficultyLevel: 'easy',\r\n\tcurrentRoundIndex: 0,\r\n\tanswerProcStatus: 'unchecked',\r\n\tcurrentAnswer: '',\r\n\tcurrentAnswerStatus: null,\r\n\tanswersDisabledStatus: false,\r\n\ten: [],\r\n\tru: [],\r\n\tam: [\r\n\t\t\t{\r\n\t\t\t\tquestion: 'Ե՞րբ է տեղի ունեցել ավարայրի ճակատամարտը։',\r\n\t\t\t\tcorrect_answer: '451թ․',\r\n\t\t\t\tincorrect_answers: ['481թ․', '371թ․', '551թ․'],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tquestion: 'Նշվածներից ո՞վ ՀՀ ազգային հերոս չէ։',\r\n\t\t\t\tcorrect_answer: 'Տիգրան Պետրոսյան',\r\n\t\t\t\tincorrect_answers: ['Շառլ Ազնավուր', 'Թաթուլ Կրպեյան', 'Կարեն Դեմիրճյան'],\r\n\t\t\t}\t\t\t\r\n\t],\r\n\tcurrentSoundProps: {}\r\n};\r\n\r\nfunction dataReducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase SET_ROUNDS:\r\n\t\t\treturn \t{...state, en: action.rounds}\r\n\t\tcase SET_CURRENT_ROUND_INDEX:\r\n\t\t\treturn {...state, currentRoundIndex: action.index}\r\n\t\tcase SET_ANSWER_PROC_STATUS:\r\n\t\t\treturn {...state, answerProcStatus: action.status}\r\n\t\tcase SET_CURRENT_ANSWER:\r\n\t\t\treturn {...state, currentAnswer: action.answer}\r\n\t\tcase SET_NEXT_ROUND:\r\n\t\t\treturn {...state, currentRoundIndex: state.currentRoundIndex+1}\r\n\t\tcase SET_GAME_PROC_STATUS:\r\n\t\t\tif(!action.status && !state.currentAnswerStatus) return {...state, en: [], gameProcStatus: 'lost'}\r\n\t\t\treturn {...state, gameProcStatus: action.status}\r\n\t\tcase HIGHLIGHT_TRUE_ANSWER:\r\n\t\t\tif(action.currentAnswer === state[state.currentLanguage][state.currentRoundIndex].correct_answer) {\r\n\t\t\t\treturn {...state, currentAnswerStatus: true}\r\n\t\t\t} else {\r\n\t\t\t \treturn {...state, currentAnswerStatus: false}\r\n\t\t\t}\r\n\t\tcase SET_CURRENT_SOUND_PROPS:\r\n\t\t\tconst {url, autoLoad, autoPlay, playStatus} = action;\r\n\t\t\treturn \t{...state, currentSoundProps: {url, autoLoad, autoPlay, playStatus}}\r\n\t\tcase SET_ANSWERS_DISABLED_STATUS:\r\n\t\t\treturn \t{...state, answersDisabledStatus: action.status}\r\n\t\tcase SET_CURRENT_SOUND_PROPS_AFTER_COMPARE:\r\n\t\t\tconst answerSoundUrl = state.currentAnswerStatus ? action.rightAnswerSoundUrl : action.wrongAnswerSoundUrl;\r\n\t\t\treturn \t{...state, currentSoundProps: {...state.currentSoundProps, url: answerSoundUrl}}\r\n\t\tdefault: return state\r\n\t}\r\n}\r\n\r\nexport default dataReducer","export const SET_ROUNDS = 'DATA/SET_ROUNDS';\r\nexport const SET_CURRENT_ANSWER = 'DATA/SET_CURRENT_ANSWER';\r\nexport const SET_ANSWER_PROC_STATUS = 'DATA/SET_ANSWER_PROC_STATUS';\r\nexport const SET_CURRENT_ROUND_INDEX = 'GAME/SET_CURRENT_ROUND_INDEX';\r\nexport const HIGHLIGHT_TRUE_ANSWER = 'GAME/HIGHLIGHT_TRUE_ANSWER';\r\nexport const SET_NEXT_ROUND = 'DATA/SET_NEXT_ROUND';\r\nexport const SET_GAME_PROC_STATUS = 'GAME/SET_GAME_PROC_STATUS';\r\nexport const SET_CURRENT_SOUND_PROPS = 'SOUNDS/SET_CURRENT_SOUND_PROPS';\r\nexport const SET_CURRENT_SOUND_PROPS_AFTER_COMPARE = 'SOUNDS/SET_CURRENT_SOUND_PROPS_AFTER_COMPARE';\r\nexport const SET_ANSWERS_DISABLED_STATUS = 'GAME/SET_ANSWERS_DISABLED_STATUS';","import { combineReducers } from 'redux';\r\nimport dataReducer from './dataReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n\tdata: dataReducer\r\n})\r\n","import React from 'react';\r\nimport logo from '../logo.svg';\r\n\r\nfunction Header() {\r\n\treturn (\r\n\t\t<div id=\"header\">\r\n\t\t\t<img src={logo} alt=\"logo\"/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Header","import { SET_ROUNDS, SET_CURRENT_ROUND_INDEX, SET_CURRENT_ANSWER, SET_ANSWER_PROC_STATUS, HIGHLIGHT_TRUE_ANSWER, SET_NEXT_ROUND, SET_GAME_PROC_STATUS, SET_CURRENT_SOUND_PROPS, SET_CURRENT_SOUND_PROPS_AFTER_COMPARE, SET_ANSWERS_DISABLED_STATUS } from './types';\r\n\r\nexport function setRounds(difficulty, rounds) {\r\n\treturn {\r\n\t\ttype: SET_ROUNDS,\r\n\t\tdifficulty,\r\n\t\trounds\r\n\t}\r\n};\r\n\r\nexport function setCurrentRoundIndex(index) {\r\n\treturn {\r\n\t\ttype: SET_CURRENT_ROUND_INDEX,\r\n\t\tindex\r\n\t}\r\n};\r\n\r\nexport function highlightTrueAnswer(currentAnswer, winMusic, lostMusic) {\r\n\treturn {\r\n\t\ttype: HIGHLIGHT_TRUE_ANSWER,\r\n\t\tcurrentAnswer\r\n\t}\r\n};\r\n\r\nexport function fetchQuestions(difficulty) {\r\n\tconsole.log('fetching')\r\n\treturn function(dispatch) {\r\n\t\tfetch(`https://opentdb.com/api.php?amount=15&difficulty=${difficulty}&type=multiple`)\r\n\t\t.then(res => res.json())\r\n\t\t.then(data => {\r\n\t\t\tdata.results.forEach(item => {\r\n\t\t\t\titem.variants = item.incorrect_answers;\r\n\t\t\t\titem.variants.push(item.correct_answer);\r\n\t\t\t\t// item.variants.splice(Math.floor(Math.random()*3), 0, item.correct_answer);\r\n\t\t\t\tdelete item.incorrect_answers;\r\n\t\t\t});\r\n\t\t\tdispatch(setRounds(difficulty, data.results))\r\n\t\t})\r\n\t}\r\n};\r\n\r\nexport function setCurrentAnswer(answer) {\r\n\treturn {\r\n\t\ttype: SET_CURRENT_ANSWER,\r\n\t\tanswer\r\n\t}\r\n};\r\n\r\nexport function setAnswerProcessStatus(status) {\r\n\treturn {\r\n\t\ttype: SET_ANSWER_PROC_STATUS,\r\n\t\tstatus\r\n\t}\r\n};\r\n\r\nexport function setNextRound() {\r\n\treturn {\r\n\t\ttype: SET_NEXT_ROUND\r\n\t}\r\n};\r\n\r\nexport function setGameProcStatus(status) {\r\n\treturn {\r\n\t\ttype: SET_GAME_PROC_STATUS,\r\n\t\tstatus\r\n\t}\r\n};\r\n\r\nexport function setAnswersDisabledStatus(status) {\r\n\treturn {\r\n\t\ttype: SET_ANSWERS_DISABLED_STATUS,\r\n\t\tstatus\r\n\t}\r\n};\r\n\r\nfunction setTimeoutPromise(ms) {\r\n\treturn new Promise(resolve => setTimeout(resolve, ms))\r\n};\r\n\r\nexport function asyncCheckAnswer(answer) {\r\n\treturn async function(dispatch) {\r\n\t\tdispatch(setAnswerProcessStatus('checking'));\r\n\t\tdispatch(setAnswersDisabledStatus(true));\r\n\t\tdispatch(setCurrentAnswer(answer));\r\n\t\tawait setTimeoutPromise(3000);\r\n\t\tdispatch(setAnswerProcessStatus('checked'));\r\n\t\tdispatch(highlightTrueAnswer(answer));\r\n\t\tsetCurrentSoundPropsAfterCompare();\r\n\t\tawait setTimeoutPromise(3000);\r\n\t\tdispatch(setAnswerProcessStatus('roundFinal'));\r\n\t\tdispatch(setGameProcStatus());\r\n\t\tdispatch(setAnswersDisabledStatus(false));\r\n\t\tdispatch(setNextRound());\r\n\t}\r\n};\r\n\r\nexport function setCurrentSoundProps(url, autoLoad = false, autoPlay = false, playStatus = \"PLAYING\") {\r\n\treturn {\r\n\t\ttype: SET_CURRENT_SOUND_PROPS,\r\n\t\turl,\r\n\t\tautoLoad,\r\n\t\tautoPlay,\r\n\t\tplayStatus\r\n\t}\r\n};\r\n\r\nexport function setCurrentSoundPropsAfterCompare(rightAnswerSoundUrl, wrongAnswerSoundUrl) {\r\n\treturn {\r\n\t\ttype: SET_CURRENT_SOUND_PROPS_AFTER_COMPARE,\r\n\t\trightAnswerSoundUrl,\r\n\t\twrongAnswerSoundUrl\r\n\t}\r\n};\r\n\r\nexport function asyncSetCurrentSoundProps(checkingSoundUrl, rightAnswerSoundUrl, wrongAnswerSoundUrl) {\r\n\treturn async function(dispatch) {\r\n\t\tdispatch(setCurrentSoundProps(checkingSoundUrl));\r\n\t\tawait setTimeoutPromise(3000);\r\n\t\tdispatch(setCurrentSoundPropsAfterCompare(rightAnswerSoundUrl, wrongAnswerSoundUrl));\r\n\t}\r\n};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { setGameProcStatus, setCurrentRoundIndex } from '../redux/actions';\r\n\r\nfunction MainCommands() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tfunction handleStartGame() {\r\n\t\tconsole.log(1)\r\n\t\tdispatch(setGameProcStatus('start'));\r\n\t\tdispatch(setCurrentRoundIndex(0));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div id=\"mainCommands\">\r\n\t\t\t<Link to=\"game\" className=\"btn btn-outline-light my-2 py-2\" onClick={handleStartGame}>Start game</Link>\r\n\t\t\t<Link to=\"rules\" className=\"btn btn-outline-light my-2 py-2\">Rules</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MainCommands","import React from 'react'; \r\nimport MainCommands from './MainCommands';\r\n\r\nfunction LostPage() {\r\n\treturn (\r\n\t\t<div className=\"lost-page\">\r\n\t\t\t<h4>You lost</h4>\r\n\t\t\t<MainCommands />\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default LostPage","import React from 'react'; \r\n\r\nfunction Question(props) {\r\n\treturn (\r\n\t\t<div className=\"question\" >\r\n\t\t\t<h4>{props.question}</h4>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Question","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { asyncCheckAnswer } from '../redux/actions';\r\nimport { asyncSetCurrentSoundProps } from '../redux/actions';\r\n\r\nfunction AnswerItem(props) {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tfunction handleAnswer(event) {\r\n\t\tdispatch(asyncCheckAnswer(props.answer));\r\n\t\tdispatch(asyncSetCurrentSoundProps('sounds/final_answer.mp3', 'sounds/correct_answer.mp3', 'sounds/wrong_answer.mp3'));\r\n\t};\r\n\r\n\tconst backgroundColor = (props.currentAnswer === props.answer && props.answerProcStatus === 'checking') ?\r\n\t\t\t\t\t\t\t'orange' :\r\n\t\t\t\t\t\t\t(props.answerProcStatus === 'checked' && props.currentAnswer === props.answer && props.currentAnswer === props.correctAnswer) ?\r\n\t\t\t\t\t\t\t'lightgreen' :\r\n\t\t\t\t\t\t\t(props.answerProcStatus === 'checked' && props.currentAnswer !== props.answer && props.answer === props.correctAnswer) ?\r\n\t\t\t\t\t\t\t'lightgreen' : \r\n\t\t\t\t\t\t\t(props.answerProcStatus === 'checked' && props.currentAnswer === props.answer && props.currentAnswer !== props.correctAnswer) ?\r\n\t\t\t\t\t\t\t'red' : '';\r\n\r\n\treturn ( \r\n\t\t<div className=\"col-md-6 answer-item\" >\r\n\t\t\t<button to=\"game\" className=\"btn btn-outline-light w-100 my-2 py-2\" onClick={handleAnswer} style={{backgroundColor}} disabled={props.answersDisabledStatus} >\r\n\t\t\t\t{props.answer}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AnswerItem","import React from 'react';\r\n\r\nfunction Preloader() {\r\n\treturn (\r\n\t\t<div className=\"preloader spinner-border text-info text-center\" role=\"status\">\r\n\t\t  <span className=\"sr-only\">Loading...</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Preloader","import React, { useEffect } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { fetchQuestions, setCurrentSoundProps } from '../redux/actions';\r\nimport Sound from 'react-sound';\r\nimport Question from './Question';\r\nimport AnswerItem from './AnswerItem';\r\nimport Preloader from './Preloader';\r\n\r\nfunction Game(props) {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchQuestions('easy'));\r\n\t\tdispatch(setCurrentSoundProps('sounds/resign.mp3'))\t\t\r\n\t},[]);\r\n\r\n\tfunction handleFinishedPlaying() {\r\n\t\tdispatch(setCurrentSoundProps(`sounds/${props.currentDifficultyLevel}.mp3`))\r\n\t}\r\n\r\n\tif(props.gameProcStatus === 'lost' && \r\n\t\t!props.currentAnswerStatus && \r\n\t\ttypeof props.currentAnswerStatus === 'boolean') return <Redirect to='lostPage' />\r\n\t\r\n\tif(props.rounds.length === 0) return <Preloader />;\r\n\r\n\tconst answers = props.rounds[props.currentRoundIndex].variants.map(answer => <AnswerItem answer={answer} answersDisabledStatus={props.answersDisabledStatus} answerProcStatus={props.answerProcStatus} currentAnswer={props.currentAnswer} key={answer} currentAnswerStatus={props.currentAnswerStatus} correctAnswer={props.rounds[props.currentRoundIndex].correct_answer} />);\r\n\treturn (\r\n\t\t<div id=\"game\">\t\r\n\t\t\t<Sound \r\n\t\t\t\turl={props.currentSoundProps.url} \r\n\t\t\t\tautoLoad={props.currentSoundProps.autoLoad}\r\n\t\t\t\tautoPlay={props.currentSoundProps.autoPlay}\r\n\t\t\t\tplayStatus={props.currentSoundProps.playStatus}\r\n\t\t\t\tonFinishedPlaying={handleFinishedPlaying}\r\n\t\t\t />\r\n\t\t\t<Question question={props.rounds[props.currentRoundIndex].question} />\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t{answers}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcurrentRoundIndex: state.data.currentRoundIndex,\r\n\t\trounds: state.data.en,\r\n\t\tanswerProcStatus: state.data.answerProcStatus,\r\n\t\tcurrentAnswer: state.data.currentAnswer,\r\n\t\tcurrentAnswerStatus: state.data.currentAnswerStatus,\r\n\t\tgameProcStatus: state.data.gameProcStatus,\r\n\t\tcurrentSoundProps: state.data.currentSoundProps,\r\n\t\tanswersDisabledStatus: state.data.answersDisabledStatus,\r\n\t\tcurrentDifficultyLevel: state.data.currentDifficultyLevel\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Game)","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport Header from './components/Header';\nimport MainCommands from './components/MainCommands';\nimport LostPage from './components/LostPage';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n  \t<Router>\n\t    <div className=\"page-content\">\n\t    \t<div className=\"container text-center\">\n\t    \t\t<Header />\n\t\t    \t<Switch>\n\t\t\t\t  <Route path=\"/game\" exact component={Game} />\n\t\t\t\t  <Route path=\"/LostPage\" exact component={LostPage} />\t  \t\t\t  \n\t\t\t\t  <Route path=\"/\" exact component={MainCommands} />\n\t        \t</Switch>\n\t    \t</div>\n\t    </div>\n    </Router>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {rootReducer} from './redux/rootReducer';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nconst app = (\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n);\nwindow.store = store;\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}